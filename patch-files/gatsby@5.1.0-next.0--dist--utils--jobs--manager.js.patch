Index: node_modules/gatsby/dist/utils/jobs/manager.js
===================================================================
--- node_modules/gatsby/dist/utils/jobs/manager.js
+++ node_modules/gatsby/dist/utils/jobs/manager.js
@@ -150,33 +150,33 @@
     plugin
   } = job;
 
   try {
-    const worker = (0, _requireGatsbyPlugin.requireGatsbyPlugin)(plugin, `gatsby-worker`);
+    return (0, _requireGatsbyPlugin.requireGatsbyPlugin)(plugin, `gatsby-worker`).then(worker => {
+      if (!worker[job.name]) {
+        throw new Error(`No worker function found for ${job.name}`);
+      }
 
-    if (!worker[job.name]) {
-      throw new Error(`No worker function found for ${job.name}`);
-    }
+      if (!forceLocal && !job.plugin.isLocal && hasExternalJobsEnabled()) {
+        if (process.send) {
+          if (!isListeningForMessages) {
+            isListeningForMessages = true;
+            listenForJobMessages();
+          }
 
-    if (!forceLocal && !job.plugin.isLocal && hasExternalJobsEnabled()) {
-      if (process.send) {
-        if (!isListeningForMessages) {
-          isListeningForMessages = true;
-          listenForJobMessages();
-        }
+          return runExternalWorker(job);
+        } else {
+          // only show the offloading warning once
+          if (!hasShownIPCDisabledWarning) {
+            hasShownIPCDisabledWarning = true;
 
-        return runExternalWorker(job);
-      } else {
-        // only show the offloading warning once
-        if (!hasShownIPCDisabledWarning) {
-          hasShownIPCDisabledWarning = true;
-
-          _reporter.default.warn(`Offloading of a job failed as IPC could not be detected. Running job locally.`);
+            _reporter.default.warn(`Offloading of a job failed as IPC could not be detected. Running job locally.`);
+          }
         }
       }
-    }
 
-    return runLocalWorker(worker[job.name], job);
+      return runLocalWorker(worker[job.name], job);
+    });
   } catch (err) {
     throw new Error(`We couldn't find a gatsby-worker.js(${plugin.resolve}/gatsby-worker.js) file for ${plugin.name}@${plugin.version}`);
   }
 }
